services:
  mysql:
    image: mysql:8.0
    container_name: certificates-mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: certificados_idexud
      MYSQL_USER: certificates_user
      MYSQL_PASSWORD: certificates123
    volumes:
      - mysql-data:/var/lib/mysql
      - ./sql/database.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "4306:3306"
    restart: unless-stopped
    networks:
      - certificates-net

  redis:
    image: redis:7-alpine
    container_name: certificates-redis
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis-data:/data
    ports:
      - "4379:6379"
    networks:
      - certificates-net
    restart: unless-stopped

  admin-service:
    build:
      context: .
      dockerfile: docker/admin.Dockerfile
    container_name: certificates-admin
    ports:
      - "4001:80"
    environment:
      - DB_HOST=mysql
      - DB_NAME=certificados_idexud
      - DB_USER=certificates_user
      - DB_PASSWORD=certificates123
      - REDIS_HOST=redis
      - REDIS_PASSWORD=redis123
      - ENVIRONMENT=docker
    volumes:
      - ./admin:/var/www/html/admin:ro
      - ./config:/var/www/html/config:ro
      - ./includes:/var/www/html/includes:ro
      - ./assets:/var/www/html/assets:ro
      - uploads-data:/var/www/html/uploads
      - generated-data:/var/www/html/generated
      - templates-data:/var/www/html/templates
    networks:
      - certificates-net
    depends_on:
      - mysql
      - redis
    restart: unless-stopped

  public-service:
    build:
      context: .
      dockerfile: docker/public.Dockerfile
    container_name: certificates-public
    ports:
      - "4002:80"
    environment:
      - DB_HOST=mysql
      - DB_NAME=certificados_idexud
      - DB_USER=certificates_user
      - DB_PASSWORD=certificates123
      - REDIS_HOST=redis
      - REDIS_PASSWORD=redis123
      - ENVIRONMENT=docker
    volumes:
      - ./public:/var/www/html/public:ro
      - ./config:/var/www/html/config:ro
      - ./includes:/var/www/html/includes:ro
      - ./assets:/var/www/html/assets:ro
      - generated-data:/var/www/html/generated:ro
    networks:
      - certificates-net
    depends_on:
      - mysql
      - redis
    restart: unless-stopped

  file-service:
    build:
      context: .
      dockerfile: docker/file.Dockerfile
    container_name: certificates-files
    ports:
      - "4005:80"
    volumes:
      - uploads-data:/var/www/html/uploads
      - generated-data:/var/www/html/generated
      - templates-data:/var/www/html/templates
    networks:
      - certificates-net
    restart: unless-stopped

  nginx-gateway:
    image: nginx:alpine
    container_name: certificates-gateway
    ports:
      - "4080:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - certificates-net
    depends_on:
      - admin-service
      - public-service
      - file-service
    restart: unless-stopped

networks:
  certificates-net:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
  uploads-data:
  generated-data:
  templates-data:
